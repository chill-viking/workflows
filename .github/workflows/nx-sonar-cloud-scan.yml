on:
  workflow_call:
    inputs:
      sonar-org:
        description: 'Sonar organisation key'
        type: string
        default: 'chill-viking-org'
      sonar-project:
        description: 'Sonar project key'
        type: string
        required: true
      working-directory:
        description: 'Directory of nx workspace'
        type: string
        default: './'
      project-location:
        description: 'Location of project source code relative to working-directory'
        type: string
        required: true
      coverage-location:
        description: 'Filepath to coverage file, inside project folder'
        type: string
        default: 'coverage/lcov.info'
      project-name:
        description: 'Project in nx workspace to be published'
        type: string
        required: true
      config-location:
        description: 'TS Config location for project'
        type: string
        required: true
      project-version:
        description: 'Version of Project'
        type: string
        default: ''
      package-location:
        description: 'Location to find package.json, defaults to {working-directory}{project-location}'
        type: string
        required: false
    secrets:
      sonar-token:
        description: 'Sonar token'
        required: true
      github-token:
        description: 'GitHub token'
        required: true

name: Test, Build, and Publish Nx Project to SonarCloud

permissions:
  contents: read

env:
  PROJECT_BASE: ${{ inputs.working-directory }}${{ inputs.project-location }}
  PROJECT_VERSION: ${{ inputs.project-version }}

jobs:
  main:
    name: publish to sonarcloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: 'Checkout code'
        with:
          fetch-depth: 0

      - uses: chill-viking/npm-ci@latest
        name: Install Dependencies
        with:
          working_directory: ${{ inputs.working-directory }}

      - uses: chill-viking/workflows/actions/nx-test-and-build@main
        name: Test and Build project
        with:
          project-name: ${{ inputs.project-name }}
          working-directory: ${{ inputs.working-directory }}

      - name: Get NPM Version
        id: package-version
        if: env.PROJECT_VERSION == ''
        uses: martinbeentjes/npm-get-version-action@main
        with:
          path: ${{ inputs.package-location || env.PROJECT_BASE }}

      - name: Set ENV Version
        if: env.PROJECT_VERSION == ''
        shell: pwsh
        run: |
          $version=(${{ steps.package-version.outputs.current-version }})
          echo "PROJECT_VERSION=$version" >> $GITHUB_ENV

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: ${{ env.PROJECT_BASE }}
          args: >
            -Dsonar.organization=${{ inputs.sonar-org }}
            -Dsonar.projectKey=${{ inputs.sonar-project }}
            -Dsonar.javascript.lcov.reportPaths=${{ inputs.coverage-location }}
            -Dsonar.typescript.tsconfigPaths=${{ inputs.config-location }}
            -Dsonar.projectVersion=${{ env.PROJECT_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.github-token }}
          SONAR_TOKEN: ${{ secrets.sonar-token }}
